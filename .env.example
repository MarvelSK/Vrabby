# =============================================================================
# vrabby ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and configure the values below
# Required fields are marked with [REQUIRED]
# Optional fields have sensible defaults

# =============================================================================
# REQUIRED CONFIGURATION - USER MUST PROVIDE
# =============================================================================

# [REQUIRED] Anthropic API Key for Claude Code SDK
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=
OPENAI_API_KEY=

# [REQUIRED] Database URL (Postgres)
# Use your Supabase Postgres connection string.
# Example: postgresql://postgres.USER:YOUR_PASSWORD@YOUR_HOST:5432/postgres?sslmode=require
DATABASE_URL=

# =============================================================================
# OPTIONAL CONFIGURATION - ADVANCED USERS
# =============================================================================

# Encryption key for sensitive data (generate a random 32-character string)
# Leave empty to use default internal encryption
ENCRYPTION_KEY=

# =============================================================================
# DEFAULT CONFIGURATION - USUALLY NO CHANGES NEEDED
# =============================================================================

# API Server Configuration
API_PORT=8080
# Debug logging (backend + frontend). Set to true/1 to enable verbose logs
DEBUG=false
# Optionally kill common dev ports automatically during setup (Windows only)
FREE_PORTS_ON_SETUP=false

# Database migrations behavior (defaults shown)
# Set to 0 to skip Alembic auto-migrations on API startup (useful for frontend-only dev)
DB_MIGRATIONS_ON_STARTUP=1
# Number of retries when applying migrations on startup
DB_MIGRATIONS_MAX_RETRIES=5
# Seconds to wait between retries
DB_MIGRATIONS_RETRY_DELAY_SEC=3

# CORS (do not use wildcard in production)
# Comma-separated list of allowed origins
ALLOWED_ORIGINS=http://localhost:3000

# Supabase Auth (backend JWT verification)
# Either set SUPABASE_PROJECT_URL (preferred) or SUPABASE_JWKS_URL directly
# SUPABASE_PROJECT_URL=https://YOUR_PROJECT_REF.supabase.co
# SUPABASE_JWKS_URL=https://YOUR_PROJECT_REF.supabase.co/auth/v1/keys

# Stripe Billing (set at least STRIPE_SECRET_KEY and one of the price ids)
# STRIPE_SECRET_KEY=sk_live_xxx
# STRIPE_WEBHOOK_SECRET=whsec_xxx
# STRIPE_PRICE_SUB_MONTHLY=price_xxx
# STRIPE_PRICE_CREDITS=price_xxx
SUBSCRIPTION_CREDITS_PER_PERIOD=100
PURCHASE_CREDITS_PER_UNIT=500
FREE_CREDITS_ON_SIGNUP=5
# Tokens per 1 credit for token-based billing (approximate)
TOKENS_PER_CREDIT=1000

# Rate limits
RATE_LIMIT_PER_MIN=60
RATE_LIMIT_PER_DAY=5000
RATE_LIMIT_BURST=60

# Background jobs retry (Act/Chat internal retries)
JOB_MAX_RETRIES=2
JOB_RETRY_DELAY_SEC=2

# Sandbox (Docker) for running untrusted commands such as npm install
SANDBOX_ENABLED=1
SANDBOX_DOCKER_IMAGE=node:20
SANDBOX_CPU=1.0
SANDBOX_MEMORY=1g
SANDBOX_TIMEOUT_SEC=600

# Database Configuration
# Set DATABASE_URL above. The app normalizes postgres://... to SQLAlchemy format and enforces sslmode=require for Supabase hosts if missing.

# Project Storage Paths
PROJECTS_ROOT=./data/projects
PROJECTS_ROOT_HOST=./data/projects

# Preview Server Port Range
PREVIEW_PORT_START=3100
PREVIEW_PORT_END=3999

# Claude Model Configuration
CLAUDE_CODE_MODEL=claude-sonnet-4-20250514

# Frontend API Endpoints (automatically configured by Makefile)
# Note: These are set dynamically by 'make start' - no need to change manually
NEXT_PUBLIC_API_BASE=http://localhost:8080
NEXT_PUBLIC_WS_BASE=ws://localhost:8080
# Debug logging on the frontend app
NEXT_PUBLIC_DEBUG=false

# Frontend Supabase (public; required for web auth)
# Get from your Supabase project settings (these values are safe to expose to the client)
NEXT_PUBLIC_SUPABASE_URL=
NEXT_PUBLIC_SUPABASE_ANON_KEY=

# Preview Server Binding and Readiness (optional)
# Host address the Next.js dev server binds to. Use 127.0.0.1 to avoid IPv6/localhost quirks on Windows.
#PREVIEW_BIND=127.0.0.1
# Public host used to build the preview URL returned to the frontend.
# If binding to 0.0.0.0 for LAN access, keep PREVIEW_PUBLIC_HOST=127.0.0.1 so the iframe uses loopback.
#PREVIEW_PUBLIC_HOST=127.0.0.1
# How long (in seconds) backend waits for the dev server to become ready before failing.
#PREVIEW_READINESS_TIMEOUT_SEC=45
